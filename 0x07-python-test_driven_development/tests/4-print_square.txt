#4-print_square.txt
=============================
How to use 4-print_square.txt
=============================

This is a test file for the function called `print_square()`

Integer values
=============================

`print_square()` prints a square using the '#' character.
The function takes one argument: `size' which must be an integer

::
    >>> print_square = __import__("4-print_square").print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

    >>> print_square(0)

Other values
==============================

If the argument type is anything other than an integer or if the size value is less than zero(negative), an exception error will be thrown:

::
    >>> print_square(-1)
    Traceback (most recent call last):
    ValueError: size must be >= 0

    >>> print_square("hello")
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square(1.0)
    Traceback (most recent call last):
    TypeError: size must be an integer

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
