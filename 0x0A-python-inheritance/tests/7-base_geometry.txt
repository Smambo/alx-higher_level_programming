# 7-base_geometry.txt
==================================
How to use 7-base_geometry.py
==================================

This is a test file for the use of the
`BaseGeometry` class

==================================

The class has two public instance methods: `def area(self):`
and `def integer_validator(self, name, value):`, the former raises
and `Exception` with a message and the latter validates `value`.

::
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> string = "hello"
	>>> bg = BaseGeometry()
	>>> bg.integer_validator(string, 5)
	>>> bg.integer_validator(string, 25)
	>>> bg.integer_validator(string, 18)
	>>> bg.integer_validator(string, 0)
	Traceback (most recent call last):
	ValueError: hello must be greater than 0
	>>> bg.integer_validator(string, -1)
	Traceback (most recent call last):
	ValueError: hello must be greater than 0
	>>> bg.integer_validator(string, "string")
	Traceback (most recent call last):
	TypeError: hello must be an integer
	>>> bg.integer_validator(string, [string])
	Traceback (most recent call last):
	TypeError: hello must be an integer
	>>> bg.integer_validator(string, [1])
	Traceback (most recent call last):
	TypeError: hello must be an integer
	>>> bg.integer_validator(string, (1))
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
	>>> bg.integer_validator(string, 2.0)
	Traceback (most recent call last):
	TypeError: hello must be an integer
